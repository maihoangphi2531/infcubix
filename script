local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Global toggles
_G.AutoTeleport = false
_G.AutoClick = false

-- GUI
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "ControlGui"
screenGui.ResetOnSpawn = false

local uiCorner = Instance.new("UICorner")
local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 2
uiStroke.Color = Color3.fromRGB(200, 200, 200)
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local pastelBackground = Color3.fromRGB(225, 240, 255)
local pastelText = Color3.fromRGB(30, 30, 30)

local function createToggle(name, pos, defaultState, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0, 200, 0, 45)
    button.Position = pos
    button.BackgroundColor3 = pastelBackground
    button.TextColor3 = pastelText
    button.Font = Enum.Font.GothamSemibold
    button.TextSize = 20
    button.Text = name .. ": " .. (defaultState and "ON" or "OFF")
    button.Parent = screenGui

    uiCorner:Clone().Parent = button
    uiStroke:Clone().Parent = button

    local state = defaultState
    button.MouseButton1Click:Connect(function()
        state = not state
        button.Text = name .. ": " .. (state and "ON" or "OFF")

        -- Hiệu ứng nhấn
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = state and Color3.fromRGB(180, 255, 200) or pastelBackground
        }):Play()

        callback(state)
    end)
end

-- Create Toggles
createToggle("AutoTeleport", UDim2.new(0, 10, 0, 10), false, function(state)
    _G.AutoTeleport = state
end)

createToggle("AutoClick", UDim2.new(0, 10, 0, 65), false, function(state)
    _G.AutoClick = state
end)

-- Nút bật/tắt 3D Rendering với giá trị mặc định là ON (true)
-- Nút bật/tắt FPS Boost (3D Rendering) với giá trị mặc định là TẮT Boost (tức BẬT 3D)
createToggle("FPS Boost", UDim2.new(0, 10, 0, 120), false, function(state)
    RunService:Set3dRenderingEnabled(not state)
end)


-- AutoTeleport Logic
task.spawn(function()
    local Attractions = workspace:WaitForChild("Attractions")

    Attractions.ChildAdded:Connect(function(child)
        if not _G.AutoTeleport then return end

        task.wait(0.3) -- Chờ Area được thêm vào

        local area = child:FindFirstChild("Area")
        if not area then return end

        local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end

        local targetCFrame

        -- Trường hợp Area là một Part
        if area:IsA("BasePart") then
            targetCFrame = area.CFrame

        -- Trường hợp Area là một Model
        elseif area:IsA("Model") then
            local targetPart = area.PrimaryPart or area:FindFirstChildWhichIsA("BasePart")
            if targetPart then
                targetCFrame = targetPart.CFrame
            end
        end

        -- Nếu xác định được vị trí thì teleport
        if targetCFrame then
            root.CFrame = targetCFrame + Vector3.new(0, 3, 0)
        end
    end)
end)

task.spawn(function()
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local gui = player:WaitForChild("PlayerGui"):WaitForChild("MainGui")
    local minigameGui = gui.Vlogging.PhoneTimingMinigame
    local bar = minigameGui.Moving_Bar
    local green = minigameGui.Green

    local prevBarX = bar.AbsolutePosition.X + bar.AbsoluteSize.X / 2
    local prevTime = tick()
    local waiting = false
    local canClickNow = false
    local velocities = {}

    local greenXHistory = {}
    local greenSettleTime = tick()
    local wasGreenStable = true

    local statusGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    statusGui.Name = "ClickStatusGui"
    statusGui.ResetOnSpawn = false

    local statusLabel = Instance.new("TextLabel", statusGui)
    statusLabel.Size = UDim2.new(0, 180, 0, 30)
    statusLabel.Position = UDim2.new(1, -200, 0, 100)
    statusLabel.BackgroundTransparency = 0.3
    statusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    statusLabel.TextColor3 = Color3.new(1, 1, 1)
    statusLabel.TextStrokeTransparency = 0.6
    statusLabel.Font = Enum.Font.GothamSemibold
    statusLabel.TextScaled = true
    statusLabel.Text = "⏳ Starting..."

    local function updateStatus(text, color)
        statusLabel.Text = text
        statusLabel.TextColor3 = color
    end

    local function mouse1click()
        mouse1press()
        mouse1release()
    end

    game:GetService("RunService").RenderStepped:Connect(function(dt)
        if not _G.AutoClick or waiting then return end

        if not minigameGui.Visible then
            updateStatus("❌ Game Over", Color3.fromRGB(200, 50, 50))
            return
        end

        local barPos = bar.AbsolutePosition
        local greenPos = green.AbsolutePosition
        local barX = barPos.X + bar.AbsoluteSize.X / 2
        local greenX = greenPos.X + green.AbsoluteSize.X / 2

        local now = tick()
        local barVelocity = (barX - prevBarX) / (now - prevTime)
        prevBarX, prevTime = barX, now

        table.insert(velocities, barVelocity)
        if #velocities > 3 then table.remove(velocities, 1) end
        local avgVelocity = 0
        for _, v in ipairs(velocities) do avgVelocity += v end
        avgVelocity /= #velocities

        -- Kiểm tra ổn định
        table.insert(greenXHistory, greenX)
        if #greenXHistory > 6 then table.remove(greenXHistory, 1) end

        local greenStable = true
        for i = 2, #greenXHistory do
            if math.abs(greenXHistory[i] - greenXHistory[i - 1]) > 0.5 then
                greenStable = false
                break
            end
        end

        if greenStable ~= wasGreenStable then
            if greenStable then
                greenSettleTime = tick()
                canClickNow = true
                updateStatus("🟢 Green settled", Color3.fromRGB(0, 255, 100))
            else
                canClickNow = false
                updateStatus("🔁 Green moved", Color3.fromRGB(255, 200, 0))
            end
            wasGreenStable = greenStable
        end

        local predictedX = barX + avgVelocity * dt
        local greenLeft = greenPos.X
        local greenRight = greenLeft + green.AbsoluteSize.X

        if greenStable and (tick() - greenSettleTime) >= 0.2 and canClickNow then
            if predictedX >= greenLeft and predictedX <= greenRight then
                waiting = true
                canClickNow = false
                updateStatus("🖱️ Clicked!", Color3.fromRGB(0, 150, 255))
                mouse1click()
                task.delay(0.08, function()
                    waiting = false
                    updateStatus("⏳ Waiting...", Color3.fromRGB(200, 200, 200))
                end)
            end
        end
    end)
end)
