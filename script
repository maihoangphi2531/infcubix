local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Global toggles
_G.AutoTeleport = false
_G.AutoClick = false

-- GUI
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "ControlGui"
screenGui.ResetOnSpawn = false

local uiCorner = Instance.new("UICorner")
local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 2
uiStroke.Color = Color3.fromRGB(200, 200, 200)
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local pastelBackground = Color3.fromRGB(225, 240, 255)
local pastelText = Color3.fromRGB(30, 30, 30)

local function createToggle(name, pos, defaultState, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0, 200, 0, 45)
    button.Position = pos
    button.BackgroundColor3 = pastelBackground
    button.TextColor3 = pastelText
    button.Font = Enum.Font.GothamSemibold
    button.TextSize = 20
    button.Text = name .. ": " .. (defaultState and "ON" or "OFF")
    button.Parent = screenGui

    uiCorner:Clone().Parent = button
    uiStroke:Clone().Parent = button

    local state = defaultState
    button.MouseButton1Click:Connect(function()
        state = not state
        button.Text = name .. ": " .. (state and "ON" or "OFF")

        -- Hiệu ứng nhấn
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = state and Color3.fromRGB(180, 255, 200) or pastelBackground
        }):Play()

        callback(state)
    end)
end

-- Create Toggles
createToggle("AutoTeleport", UDim2.new(0, 10, 0, 10), false, function(state)
    _G.AutoTeleport = state
end)

createToggle("AutoClick", UDim2.new(0, 10, 0, 65), false, function(state)
    _G.AutoClick = state
end)

-- Nút bật/tắt 3D Rendering với giá trị mặc định là ON (true)
-- Nút bật/tắt FPS Boost (3D Rendering) với giá trị mặc định là TẮT Boost (tức BẬT 3D)
createToggle("FPS Boost", UDim2.new(0, 10, 0, 120), false, function(state)
    RunService:Set3dRenderingEnabled(not state)
end)


-- AutoTeleport Logic
task.spawn(function()
    local Attractions = workspace:WaitForChild("Attractions")

    Attractions.ChildAdded:Connect(function(child)
        if not _G.AutoTeleport then return end

        task.wait(0.3) -- Chờ Area được thêm vào

        local area = child:FindFirstChild("Area")
        if not area then return end

        local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end

        local targetCFrame

        -- Trường hợp Area là một Part
        if area:IsA("BasePart") then
            targetCFrame = area.CFrame

        -- Trường hợp Area là một Model
        elseif area:IsA("Model") then
            local targetPart = area.PrimaryPart or area:FindFirstChildWhichIsA("BasePart")
            if targetPart then
                targetCFrame = targetPart.CFrame
            end
        end

        -- Nếu xác định được vị trí thì teleport
        if targetCFrame then
            root.CFrame = targetCFrame + Vector3.new(0, 3, 0)
        end
    end)
end)

task.spawn(function()
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local gui = player:WaitForChild("PlayerGui"):WaitForChild("MainGui")
    local bar = gui:WaitForChild("Vlogging"):WaitForChild("PhoneTimingMinigame"):WaitForChild("Moving_Bar")
    local green = gui.Vlogging.PhoneTimingMinigame:WaitForChild("Green")

    local prevBarX = bar.AbsolutePosition.X + bar.AbsoluteSize.X / 2
    local prevTime = tick()
    local waiting = false

    local function mouse1click()
        mouse1press()
        mouse1release()
    end

    local heartbeat = game:GetService("RunService").Heartbeat

    heartbeat:Connect(function(dt)
        if not _G.AutoClick or waiting then return end

        local barX = bar.AbsolutePosition.X + bar.AbsoluteSize.X / 2
        local greenX = green.AbsolutePosition.X + green.AbsoluteSize.X / 2
        local distance = greenX - barX

        local currentTime = tick()
        local velocity = (barX - prevBarX) / (currentTime - prevTime)
        prevBarX, prevTime = barX, currentTime

        if math.abs(velocity) < 500 then return end
        if (velocity > 0 and distance < 0) or (velocity < 0 and distance > 0) then return end

        local predicted = barX + velocity * dt
        if math.abs(predicted - greenX) < 2 then
            waiting = true
            
            mouse1click()
            task.delay(0.1, function() waiting = false end)
        end
    end)
end)
